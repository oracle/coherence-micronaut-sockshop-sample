<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2021, 2023 Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.micronaut.platform</groupId>
        <artifactId>micronaut-parent</artifactId>
        <version>4.2.4</version>
        <relativePath/>
    </parent>

    <packaging>jar</packaging>
    <name>Micronaut Catalog Microservice</name>
    <description>Micronaut Catalog Microservice</description>

    <properties>
        <jdk.version>17</jdk.version>
        <release.version>17</release.version>
        <micronaut.runtime>netty</micronaut.runtime>
        <exec.mainClass>com.oracle.coherence.examples.sockshop.micronaut.catalog.Application</exec.mainClass>
        <container.repo>ghcr.io/oracle/coherence-micronaut-sockshop</container.repo>
        <coherence.groupId>com.oracle.coherence.ce</coherence.groupId>
        <coherence.version>24.09</coherence.version>
        <version.lib.lombok>1.18.34</version.lib.lombok>
        <version.lib.hamcrest>2.2</version.lib.hamcrest>
        <version.lib.rest-assured>5.5.0</version.lib.rest-assured>
        <version.lib.tracerresolver>0.1.8</version.lib.tracerresolver>
        <version.lib.logback>1.5.8</version.lib.logback>
        <version.lib.okhttp3>4.12.0</version.lib.okhttp3>
        <version.lib.jackson>2.18.0</version.lib.jackson>
        <version.lib.netty>4.1.114.Final</version.lib.netty>

        <!-- micronaut-parent overrides -->
        <micronaut.coherence.version>5.0.1</micronaut.coherence.version>
    </properties>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>sonatype-staging</id>
            <url>https://oss.sonatype.org/content/groups/staging/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jcenter.bintray.com</id>
            <url>https://jcenter.bintray.com</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </pluginRepository>
        <pluginRepository>
            <id>sonatype-staging</id>
            <url>https://oss.sonatype.org/content/groups/staging/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>jcenter.bintray.com</id>
            <url>https://jcenter.bintray.com</url>
        </pluginRepository>
    </pluginRepositories>

    <groupId>com.oracle.coherence.examples.sockshop.micronaut</groupId>
    <artifactId>catalog</artifactId>
    <version>2.2.1-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>io.micronaut.coherence</groupId>
            <artifactId>micronaut-coherence-data</artifactId>
            <version>${micronaut.coherence.version}</version>
        </dependency>

        <dependency>
            <groupId>${coherence.groupId}</groupId>
            <artifactId>coherence</artifactId>
            <version>${coherence.version}</version>
        </dependency>
        <dependency>
            <groupId>${coherence.groupId}</groupId>
            <artifactId>coherence-grpc</artifactId>
            <version>${coherence.version}</version>
        </dependency>
        <dependency>
            <groupId>${coherence.groupId}</groupId>
            <artifactId>coherence-grpc-proxy</artifactId>
            <version>${coherence.version}</version>
        </dependency>
        <dependency>
            <groupId>${coherence.groupId}</groupId>
            <artifactId>coherence-json</artifactId>
            <version>${coherence.version}</version>
        </dependency>

        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-jackson-databind</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-server-netty</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-client</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-runtime</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-management</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.micrometer</groupId>
            <artifactId>micronaut-micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lib.lombok}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${version.lib.rest-assured}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version.lib.logback}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${version.lib.logback}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.fusesource.jansi</groupId>
            <artifactId>jansi</artifactId>
            <version>2.4.1</version>
            <scope>test</scope>
        </dependency>

        <!-- tracing dependencies -->

        <dependency>
            <groupId>io.micronaut.tracing</groupId>
            <artifactId>micronaut-tracing-jaeger</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut.tracing</groupId>
            <artifactId>micronaut-tracing-brave-http</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${version.lib.okhttp3}</version>
        </dependency>

        <!-- TODO Needs to be removed -->

        <dependency>
            <groupId>io.opentracing.contrib</groupId>
            <artifactId>opentracing-tracerresolver</artifactId>
            <version>${version.lib.tracerresolver}</version>
        </dependency>

        <!-- force these versions of dependencies -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${version.lib.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${version.lib.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${version.lib.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${version.lib.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${version.lib.jackson}</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <version>${version.lib.netty}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.micronaut.maven</groupId>
                <artifactId>micronaut-maven-plugin</artifactId>
                <version>${micronaut-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <artifactSet>
                        <excludes>
                            <exclude>${coherence.groupId}:*:*</exclude>
                        </excludes>
                    </artifactSet>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <!-- Uncomment to enable incremental compilation -->
                    <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>io.micronaut.coherence</groupId>
                            <artifactId>micronaut-coherence-data</artifactId>
                            <version>${micronaut.coherence.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.lib.lombok}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut.openapi</groupId>
                            <artifactId>micronaut-openapi</artifactId>
                            <version>${micronaut.openapi.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-inject-java</artifactId>
                            <version>${micronaut.core.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut.validation</groupId>
                            <artifactId>micronaut-validation</artifactId>
                            <version>${micronaut.validation.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Amicronaut.processing.group=com.micronaut.examples.sockshop</arg>
                        <arg>-Amicronaut.processing.module=catalog</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <version>1.2.3</version>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.0</version>
                <configuration>
                    <reuseForks>false</reuseForks>
                    <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
                    <systemPropertyVariables>
                        <coherence.metrics.http.enabled>true</coherence.metrics.http.enabled>
                        <coherence.wka>127.0.0.1</coherence.wka>
                        <coherence.ttl>0</coherence.ttl>
                        <coherence.cluster>sockshop</coherence.cluster>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>container</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>3.4.3</version>
                        <configuration>
                            <from>
                                <image>gcr.io/distroless/java17</image>
                            </from>
                            <to>
                                <image>${container.repo}-${project.artifactId}</image>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                            </to>
                            <container>
                                <ports>
                                    <port>8080</port>
                                </ports>
                            </container>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
